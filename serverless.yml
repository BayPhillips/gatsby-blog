service: baysblog 

plugins:
  - '@silvermine/serverless-plugin-cloudfront-lambda-edge'
  - serverless-s3-sync

package:
  exclude:
    - 'node_modules/**'

custom:
  s3Bucket:
    dev: test.bayphillips.com
    production: www.bayphillips.com
  s3Sync:
  - bucketName: ${self:custom.s3Bucket.${self:custom:stage}}
    localDir: public
    acl: public-read
    defaultContentType: text/html
    params: ${file(./.cache/s3.params.json)}
  defaultRegion: us-east-1
  defaultEnvironmentGroup: 
  region: ${opt:region, self:custom.defaultRegion}
  stage: ${opt:stage, self:provider.stage}
  objectPrefix: '${self:service}-${self:custom.stage}'
  certificateArn: ${opt:certificateArn}

provider:
  name: aws
  runtime: nodejs8.10
  region: ${self:custom.region}
  stage: dev
  environment:
    SLS_SVC_NAME: ${self:service}
    SLS_STAGE: ${self:custom.stage}

functions:
  addIndexHtmlToEndOfRequests:
    name: '${self:custom.objectPrefix}-append-index-html-origin-request'
    handler: lambdas/addIndexHtml.handler
    memorySize: 128
    timeout: 1
    lambdaAtEdge:
      distribution: 'WebsiteDistribution'
      eventType: 'origin-request'
  addCachingHeaders:
    name: '${self:custom.objectPrefix}-add-caching-headers'
    handler: lambdas/addCachingHeaders.handler
    memorySize: 128
    timeout: 1
    lambdaAtEdge:
      distribution: 'WebsiteDistribution'
      eventType: 'origin-response'

resources:
  Resources:
    WebsiteBucket:
      Type: 'AWS::S3::Bucket'
      Properties:
        BucketName: ${self:custom.s3Bucket.${self:custom:stage}}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: 404.html
          RoutingRules: ${file(./.cache/s3.sls.routingRules.json)}
    WebsiteDistribution:
      Type: 'AWS::CloudFront::Distribution'
      Properties:
        DistributionConfig:
          DefaultCacheBehavior:
            TargetOriginId: 'WebsiteBucketOrigin'
            ViewerProtocolPolicy: 'redirect-to-https'
            DefaultTTL: 600
            MaxTTL: 600
            Compress: true
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: 'none'
          DefaultRootObject: 'index.html'
          Enabled: true
          PriceClass: 'PriceClass_100'
          HttpVersion: 'http2'
          ViewerCertificate:
            AcmCertificateArn: ${self:custom.certificateArn}
            SslSupportMethod: 'sni-only'
          Aliases:
            - '${self:custom.s3Bucket.${self:custom:stage}}'
          Origins:
            -
              Id: 'WebsiteBucketOrigin'
              DomainName: '${self:custom.s3Bucket.${self:custom:stage}}'
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
