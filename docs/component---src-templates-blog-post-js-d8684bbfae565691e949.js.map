{"version":3,"sources":["webpack:///./src/templates/blogPost.js"],"names":["propTypes","data","prop_types__WEBPACK_IMPORTED_MODULE_3__","object","isRequired","BlogPostTemplate","render","blogPost","this","props","postTitle","datePosted","postContent","contentPreview","author","postSlug","metaContent","headerImage","formattedDate","moment__WEBPACK_IMPORTED_MODULE_4___default","a","ISO_8601","structuredData","@context","@type","mainEntityOfPage","@id","site","siteMetadata","siteUrl","location","pathname","headLine","description","childMarkdownRemark","excerpt","image","fluid","src","datePublished","dateModified","name","publisher","logo","url","react__WEBPACK_IMPORTED_MODULE_1___default","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","title","keywords","previewImageUrl","structuredDataJson","className","format","dangerouslySetInnerHTML","__html","html","Component","__webpack_exports__","default","u","pageQuery"],"mappings":"yNAOMA,GACJC,KAAMC,EAAAC,OAAiBC,YAGnBC,4FAEJC,kBACE,IAAMC,EAAWC,KAAKC,MAAMR,KAAKM,SAE/BG,EAQEH,EARFG,UACAC,EAOEJ,EAPFI,WACAC,EAMEL,EANFK,YAGAC,GAGEN,EALFO,OAKEP,EAJFQ,SAIER,EAHFM,gBACAG,EAEET,EAFFS,YACAC,EACEV,EADFU,YAEIC,EAAgBC,IAAOR,EAAYQ,EAAAC,EAAOC,UAC1CC,GACJC,WAAY,oBACZC,QAAS,cACTC,kBACED,QAAS,UACTE,MAAA,GAAUlB,KAAKC,MAAMR,KAAK0B,KAAKC,aAAaC,QAAUrB,KAAKC,MAAMqB,SAASC,UAE5EC,SAAA,GAAetB,EACfuB,YAAA,GAAkBpB,EAAeqB,oBAAoBC,QACrDC,OAAS,QACCnB,EAAYoB,MAAMC,KAE5BC,cAAiBrB,EACjBsB,aAAgBtB,EAChBJ,QACEU,QAAS,SACTiB,KAAQ,gBAEVC,WACElB,QAAS,eACTiB,KAAQ,eACRE,MACEnB,QAAS,cACToB,IAAA,QAAe3B,EAAYoB,MAAMC,OAKvC,OACEO,EAAAzB,EAAA0B,cAACC,EAAA3B,GACCU,SAAatB,KAAKC,MAAMqB,SACxBkB,MAAUtC,EACVuB,YAAgBpB,EAAeqB,oBAAoBC,QACnDc,SAAajC,EAAYiC,SACzBC,gBAAoBjC,EAAYoB,MAAMC,IACtCa,mBAAuB7B,GAEvBuB,EAAAzB,EAAA0B,cAAA,WAASM,UAAU,cACjBP,EAAAzB,EAAA0B,cAAA,MAAIM,UAAU,oBAAoB1C,GAClCmC,EAAAzB,EAAA0B,cAAA,OAAKM,UAAU,mBAAf,aACcjC,IAAOR,GAAY0C,OAAO,iBAExCR,EAAAzB,EAAA0B,cAAA,OAAKM,UAAU,YACbE,yBACEC,OAAQ3C,EAAYsB,oBAAoBsB,aA3DhDnD,CAAyBwC,EAAAzB,EAAMqC,WAoErCpD,EAAiBL,UAAYA,EAE7B0D,EAAAC,QAAAC,EAEO,IAAMC","file":"component---src-templates-blog-post-js-d8684bbfae565691e949.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport * as PropTypes from \"prop-types\"\nimport moment from 'moment'\nimport Layout from \"../components/layout\"\n\n\nconst propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nclass BlogPostTemplate extends React.Component {\n\n  render() {\n    const blogPost = this.props.data.blogPost\n    const {\n      postTitle,\n      datePosted,\n      postContent,\n      author,\n      postSlug,\n      contentPreview,\n      metaContent,\n      headerImage\n    } = blogPost\n    const formattedDate = moment(datePosted, moment.ISO_8601)\n    const structuredData = {\n      \"@context\": \"http://schema.org\",\n      \"@type\": \"NewsArticle\",\n      \"mainEntityOfPage\": {\n        \"@type\": \"WebPage\",\n        \"@id\": `${this.props.data.site.siteMetadata.siteUrl}${this.props.location.pathname}`\n      },\n      \"headLine\": `${postTitle}`,\n      \"description\": `${contentPreview.childMarkdownRemark.excerpt}`,\n      \"image\": [\n        `http:${headerImage.fluid.src}`\n      ],\n      \"datePublished\": formattedDate,\n      \"dateModified\": formattedDate,\n      \"author\": {\n        \"@type\": \"Person\",\n        \"name\": \"Bay Phillips\"\n      },\n      \"publisher\": {\n        \"@type\": \"Organization\",\n        \"name\": \"Bay Phillips\",\n        \"logo\": {\n          \"@type\": \"imageObject\",\n          \"url\": `http:${headerImage.fluid.src}`\n        }\n      }\n    }\n\n    return (\n      <Layout \n        location = { this.props.location } \n        title = { postTitle } \n        description = { contentPreview.childMarkdownRemark.excerpt }\n        keywords = { metaContent.keywords }\n        previewImageUrl = { headerImage.fluid.src }\n        structuredDataJson = { structuredData }\n      >\n        <article className=\"uk-article\">\n          <h1 className=\"uk-article-title\">{postTitle}</h1>\n          <div className=\"uk-article-meta\">\n            Posted on { moment(datePosted).format('MMMM Do YYYY') }\n          </div>\n          <div className=\"uk-margin\"\n            dangerouslySetInnerHTML={{\n              __html: postContent.childMarkdownRemark.html,\n            }}\n          />\n        </article>\n      </Layout>\n    )\n  }\n}\n\nBlogPostTemplate.propTypes = propTypes\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query blogPostQuery($postSlug: String!) {\n    blogPost: contentfulBlogPost(postSlug: { eq: $postSlug }) {\n      id\n      postTitle\n      postContent {\n        childMarkdownRemark {\n          html\n        }\n      }\n      datePosted\n      author {\n        name\n      }\n      postSlug,\n      contentPreview {\n        childMarkdownRemark {\n          html\n          excerpt\n        }\n      }\n      headerImage {\n        fluid(maxWidth: 900) {\n          src\n        }\n      }\n      metaContent {\n        keywords\n      }\n    }\n    site: site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`"],"sourceRoot":""}